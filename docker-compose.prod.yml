version: '3.8'

services:
  # Service pour l'application Node.js en production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    ports:
      - "3000:3000"
    env_file: .env.production
    restart: always
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service pour la base de donn√©es MySQL en production
  db:
    image: mysql:8
    env_file: .env.production
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backup:/backup
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service Redis pour la mise en cache
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service pour les sauvegardes automatiques
  backup:
    image: mysql:8
    volumes:
      - ./scripts:/scripts
      - ./backup:/backup
    env_file: .env.production
    entrypoint: ["/bin/sh", "-c"]
    command: ["/scripts/backup.sh"]
    restart: always
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    image: databack/mysql-backup
    env_file: .env.production
    volumes:
      - ./backup:/backup
    depends_on:
      - db
    environment:
      - DB_DUMP_TARGET=/backup
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASSWORD}
      - DB_DUMP_FREQ=1440
      - DB_DUMP_BEGIN=+1
      - DB_DUMP_DEBUG=false
      - DB_DUMP_BY_SCHEMA=true
    restart: always

volumes:
  mysql_prod_data:
    driver: local
  redis_data:
    driver: local